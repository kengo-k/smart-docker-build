name: 'Smart Docker Build'
description: 'Intelligently build and push Docker images with multi-platform support, change detection, and flexible tagging strategies. Supports GHCR and DockerHub with automatic validation and error handling.'
author: 'kengo-k'
branding:
  icon: 'package'
  color: 'blue'
inputs:
  token:
    description: 'GitHub Token with permissions to access repository information and push images to container registry (GHCR_TOKEN or DOCKERHUB_TOKEN)'
    required: true
  timezone:
    description: 'Timezone for generating timestamps in image tags (e.g., "UTC", "Asia/Tokyo", "America/New_York")'
    required: false
    default: 'UTC'
runs:
  using: 'composite'
  steps:
    - name: 'Get docker build args'
      id: js_action
      run: |
        cd ${{ github.action_path }}/internal/get
        npm ci
        npm run build
        node dist/index.js
      shell: bash
      env:
        INPUT_TOKEN: ${{ inputs.token }}      # ‚Üê „Åì„Åì„Åß inputs.token „Çí INPUT_TOKEN „Å´Â§âÊèõ
        INPUT_TIMEZONE: ${{ inputs.timezone }} # ‚Üê „Åì„Åì„Åß inputs.timezone „Çí INPUT_TIMEZONE „Å´Â§âÊèõ

    - name: Login to ghcr
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Checkout latest commit
      uses: actions/checkout@v4

    - name: 'Build and Push Docker Images'
      shell: bash
      run: |
        build_args='${{ steps.js_action.outputs.build_args }}'
        echo "üîß Starting Docker build and push process..."

        success_count=0
        failure_count=0

        while IFS= read -r element; do
          path=$(echo "$element" | jq -r '.path')
          name=$(echo "$element" | jq -r '.name')
          tag=$(echo "$element" | jq -r '.tag')

          echo "üì¶ Building image: $name:$tag from $path"

          # Build the Docker image
          if docker build -t ghcr.io/${{ github.actor }}/$name:$tag -f $path $(dirname $path); then
            echo "‚úÖ Successfully built ghcr.io/${{ github.actor }}/$name:$tag"

            # Push the Docker image
            if docker push ghcr.io/${{ github.actor }}/$name:$tag; then
              echo "‚úÖ Successfully pushed ghcr.io/${{ github.actor }}/$name:$tag"
              ((success_count++))
            else
              echo "‚ùå Failed to push ghcr.io/${{ github.actor }}/$name:$tag"
              ((failure_count++))
            fi
          else
            echo "‚ùå Failed to build ghcr.io/${{ github.actor }}/$name:$tag from $path"
            echo "üí° Please check:"
            echo "   - Dockerfile syntax in $path"
            echo "   - Base image availability"
            echo "   - Build context in $(dirname $path)"
            ((failure_count++))
          fi

          echo "---"
        done < <(echo "$build_args" | jq -c '.[]')

        echo "üìä Build Summary:"
        echo "   ‚úÖ Successful: $success_count"
        echo "   ‚ùå Failed: $failure_count"

        if [ $failure_count -gt 0 ] && [ $success_count -eq 0 ]; then
          echo "üí• All builds failed. Please check the errors above."
          exit 1
        elif [ $failure_count -gt 0 ]; then
          echo "‚ö†Ô∏è  Some builds failed, but continuing with successful ones."
        else
          echo "üéâ All builds completed successfully!"
        fi
